<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2017 Sven Ruppert (sven.ruppert@gmail.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.rapidpm.vaadin</groupId>
  <artifactId>rapidpm-vaadin10-tutorial</artifactId>
  <version>01.08.00-RPM-SNAPSHOT</version>

  <name>RapidPM - Vaadin10 - Tutorial - 08</name>

  <packaging>jar</packaging>

  <inceptionYear>2018</inceptionYear>
  <organization>
    <name>Sven Ruppert</name>
    <url>http://www.sven-ruppert.de</url>
  </organization>
  <url>https://github.com/Java-Publications/backend-meets-frontend-reloaded-008</url>
  <scm>
    <url>https://github.com/Java-Publications/backend-meets-frontend-reloaded-008</url>
    <connection>
      scm:git:https://github.com/Java-Publications/backend-meets-frontend-reloaded-008.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/Java-Publications/backend-meets-frontend-reloaded-008.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>
  <developers>
    <developer>
      <name>Sven Ruppert</name>
      <email>sven.ruppert@gmail.com</email>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>
  <issueManagement>
    <system>Github</system>
    <url>
      https://github.com/Java-Publications/backend-meets-frontend-reloaded-008/issues
    </url>
  </issueManagement>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <properties>
    <!--technical-->
    <!--    <maven.compiler.release>8</maven.compiler.release>-->
    <maven.compiler.target>8</maven.compiler.target>
    <maven.compiler.source>8</maven.compiler.source>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!--RapidPM-->
    <rapidpm-functional-reactive.version>01.00.01-RPM</rapidpm-functional-reactive.version>
    <rapidpm-logger-adapter.version>01.00.01-RPM</rapidpm-logger-adapter.version>

    <!--Frameworks-->
    <vaadin.version>13.0.2</vaadin.version>
    <meecrowave.version>1.2.7</meecrowave.version>
    <cache2k-api.version>1.2.0.Final</cache2k-api.version>

    <jacoco.version>0.8.3</jacoco.version>

    <!--TDD jUnit5-->
    <junit.jupiter.version>5.4.0</junit.jupiter.version>
    <junit.platform.version>1.4.0</junit.platform.version>
    <junit-platform-maven-plugin.version>1.0.0-M5</junit-platform-maven-plugin.version>

  </properties>

  <repositories>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
  </repositories>

  <!-- Just to disable any accidental deployment to maven.central -->
  <distributionManagement>
    <repository>
      <id>localhost</id>
      <url>file://${basedir}/target/repo/</url>
    </repository>
    <snapshotRepository>
      <id>localhost</id>
      <url>file://${basedir}/target/snapshot-repo/</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <!--Vaadin -->
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.rapidpm</groupId>
      <artifactId>rapidpm-logger-adapter</artifactId>
      <version>${rapidpm-logger-adapter.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rapidpm</groupId>
      <artifactId>rapidpm-functional-reactive</artifactId>
      <version>${rapidpm-functional-reactive.version}</version>
    </dependency>

    <!--Infrastructure-->
    <dependency>
      <groupId>org.apache.meecrowave</groupId>
      <artifactId>meecrowave-core</artifactId>
      <version>${meecrowave.version}</version>
      <scope>compile</scope>
    </dependency>

    <!--Vaadin -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin</artifactId>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-lumo-theme</artifactId>
    </dependency>

    <!--Vaadin Add ons-->
    <dependency>
      <groupId>com.github.appreciated</groupId>
      <artifactId>app-layout-addon</artifactId>
      <version>2.1.0.alpha1</version>
    </dependency>


    <!-- JCche Impl-->
    <!--
          Provides the cache2k JCache implementation and depends on
          everything needed at runtime.
      -->
    <dependency>
      <groupId>org.cache2k</groupId>
      <artifactId>cache2k-jcache</artifactId>
      <version>${cache2k-api.version}</version>
      <scope>runtime</scope>
    </dependency>
    <!--
         Optional. When application code depends on JCache API.
      -->
    <dependency>
      <groupId>javax.cache</groupId>
      <artifactId>cache-api</artifactId>
      <version>1.1.0</version>
    </dependency>

    <!--Security-->

    <!--jUnit5-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit-platform-maven-plugin.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Only required to run tests in an IDE that bundles an older version -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <!--For TestUI only-->


    <!--Logging-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.meecrowave</groupId>
        <artifactId>meecrowave-maven-plugin</artifactId>
        <version>${meecrowave.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

      <plugin>
        <groupId>de.sormuras.junit</groupId>
        <artifactId>junit-platform-maven-plugin</artifactId>
        <version>${junit-platform-maven-plugin.version}</version>
        <extensions>true</extensions> <!-- Necessary to execute it in 'test' phase. -->

        <configuration>
          <tweaks>
            <failIfNoTests>false</failIfNoTests>
          </tweaks>
          <executor>JAVA</executor>
          <javaOptions>
            <additionalOptions>
              <!--<protools>-Dactivate.vaadin.protools=false</protools>-->
              <jacoco>${jacoco.java.option}</jacoco>
            </additionalOptions>
          </javaOptions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacoco.java.option</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <reporting>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>
